plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.freefair.lombok" version "6.4.2"
}

version = '0.0.2'
group = 'com.ericgha'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.opencsv:opencsv:5.6'
    implementation 'com.google.jimfs:jimfs:1.2'
    testImplementation 'org.apache.commons:commons-math3:3.6.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.4.0'
}

test {
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,

        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.ericgha'
            artifactId = project.name.toLowerCase()
            version = project.version
            from(components.java)

            pom {
                name = project.name.toLowerCase()
                description = 'A library to facilitate testing file I/O'
                url = 'https://github.com/ericghara/TestDir'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://github.com/ericghara/TestDir/blob/f522b4edeecc91b980267b2b734e784eef01c7f3/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ericgha'
                        name = 'Eric'
                    }
                }
                scm {
                    url = 'https://github.com/ericghara/TestDir'
                    connection = 'scm:git://github.com/ericghara/TestDir.git'
                    developerConnection = 'scm:git://github.com/ericghara/TestDir.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = project.name
            url 'https://maven.pkg.github.com/ericghara/TestDir'
            credentials {
                username System.getenv('GITHUB_USERNAME')
                password System.getenv('GITHUB_TOKEN')
            }
        }
        maven {
            if (project.version.contains("-SNAPSHOT") ) {
                // snapshot repository
                url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            }
            else {
                // release repository
                url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            }
            credentials {
                username System.getenv('SONATYPE_USERNAME')
                password System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
}

signing {
    def signingKey = System.getenv("SIGNING_KEY")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
